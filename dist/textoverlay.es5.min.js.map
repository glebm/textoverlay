{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///textoverlay.es5.min.js","webpack:///webpack/bootstrap 983220d0c9cef1956027","webpack:///./textoverlay.ts"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","setStyle","element","style","keys","forEach","key","setProperty","value","_createClass","defineProperties","target","props","length","descriptor","writable","protoProps","staticProps","css","backdrop","box-sizing","position","margin","overlay","border-color","border-style","color","white-space","word-wrap","overflow","textarea","background","properties","Textoverlay","strategies","_this","overlayPositioner","parentElement","Error","textareaStyle","window","getComputedStyle","document","createElement","className","copyTextareaStyle","insertBefore","syncStyles","textareaStyleWas","getPropertyValue","addEventListener","handleInput","handleScroll","observer","MutationObserver","observe","attributes","attributeFilter","resizeListener","render","removeEventListener","disconnect","remove","arguments","undefined","updateOverlayNodes","_this2","firstChild","removeChild","display","appendChild","computeOverlayNodes","node","top","offsetTop","left","offsetLeft","height","offsetHeight","width","clientWidth","parseInt","borderLeftWidth","borderRightWidth","textareaScrollTop","scrollTop","textareaZIndex","zIndex","setOverlayScroll","marginTop","reduce","ns","strategy","highlight","Array","concat","apply","map","nodeType","Node","TEXT_NODE","text","textContent","resp","prevIndex","match","lastIndex","exec","push","createTextNode","slice","str","span","cloneNode","_this3","default"],"mappings":"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","file":"textoverlay.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Textoverlay\"] = factory();\n\telse\n\t\troot[\"Textoverlay\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Textoverlay\"] = factory();\n\telse\n\t\troot[\"Textoverlay\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * textoverlay.js - Simple decorator for textarea elements\n *\n * @author Yuku Takahashi <taka84u9@gmail.com>\n */\nvar css = {\n    backdrop: {\n        'box-sizing': 'border-box',\n        'position': 'absolute',\n        'margin': '0px'\n    },\n    overlay: {\n        'box-sizing': 'border-box',\n        'border-color': 'transparent',\n        'border-style': 'solid',\n        'color': 'transparent',\n        'position': 'absolute',\n        'white-space': 'pre-wrap',\n        'word-wrap': 'break-word',\n        'overflow': 'hidden',\n        'margin': '0px'\n    },\n    textarea: {\n        background: 'transparent'\n    }\n};\n// Firefox does not provide shorthand properties in getComputedStyle, so we use\n// the expanded ones here.\nvar properties = {\n    background: ['background-attachment', 'background-blend-mode', 'background-clip', 'background-color', 'background-image', 'background-origin', 'background-position', 'background-position-x', 'background-position-y', 'background-repeat', 'background-size'],\n    overlay: ['font-family', 'font-size', 'font-weight', 'line-height', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', 'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width']\n};\n\nvar Textoverlay = function () {\n    function Textoverlay(textarea, strategies) {\n        var _this = this;\n\n        _classCallCheck(this, Textoverlay);\n\n        this.overlayPositioner = null;\n        if (textarea.parentElement === null) {\n            throw new Error('textarea must be in the DOM tree');\n        }\n        this.textarea = textarea;\n        this.textareaStyle = window.getComputedStyle(textarea);\n        this.backdrop = document.createElement('div');\n        this.backdrop.className = 'textoverlay-backdrop';\n        setStyle(this.backdrop, css.backdrop);\n        this.copyTextareaStyle(this.backdrop, properties.background);\n        this.textarea.parentElement.insertBefore(this.backdrop, this.textarea);\n        this.overlay = document.createElement('div');\n        this.overlay.className = 'textoverlay';\n        setStyle(this.overlay, css.overlay);\n        this.copyTextareaStyle(this.overlay, properties.overlay);\n        this.textarea.parentElement.insertBefore(this.overlay, this.textarea);\n        this.syncStyles();\n        this.textareaStyleWas = {};\n        Object.keys(css.textarea).forEach(function (key) {\n            _this.textareaStyleWas[key] = _this.textarea.style.getPropertyValue(key);\n        });\n        setStyle(this.textarea, css.textarea);\n        this.strategies = strategies;\n        this.textarea.addEventListener('input', function () {\n            _this.handleInput();\n        });\n        this.textarea.addEventListener('scroll', function () {\n            _this.handleScroll();\n        });\n        this.observer = new MutationObserver(function () {\n            _this.syncStyles();\n        });\n        this.observer.observe(this.textarea, {\n            attributes: true,\n            attributeFilter: ['style']\n        });\n        // Listen to resize to detect changes in the element offset position.\n        this.resizeListener = function () {\n            _this.syncStyles();\n        };\n        window.addEventListener('resize', this.resizeListener);\n        this.render();\n    }\n\n    _createClass(Textoverlay, [{\n        key: 'destroy',\n        value: function destroy() {\n            window.removeEventListener('resize', this.resizeListener);\n            this.textarea.removeEventListener('input', this.handleInput);\n            this.textarea.removeEventListener('scroll', this.handleScroll);\n            this.observer.disconnect();\n            this.overlay.remove();\n            this.backdrop.remove();\n            setStyle(this.textarea, this.textareaStyleWas);\n        }\n        /**\n         * Public API to update and sync textoverlay\n         */\n\n    }, {\n        key: 'render',\n        value: function render() {\n            var skipUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!skipUpdate) {\n                this.updateOverlayNodes();\n            }\n            this.syncStyles();\n        }\n    }, {\n        key: 'updateOverlayNodes',\n        value: function updateOverlayNodes() {\n            var _this2 = this;\n\n            // Remove all child nodes from overlay.\n            while (this.overlay.firstChild) {\n                this.overlay.removeChild(this.overlay.firstChild);\n            }\n            this.overlayPositioner = document.createElement('div');\n            this.overlayPositioner.className = 'textoverlay-positioner';\n            this.overlayPositioner.style.display = 'block';\n            this.overlay.appendChild(this.overlayPositioner);\n            this.computeOverlayNodes().forEach(function (node) {\n                _this2.overlay.appendChild(node);\n            });\n        }\n    }, {\n        key: 'syncStyles',\n        value: function syncStyles() {\n            // All the reads must happen before all the writes to prevent layout\n            // thrashing, because every write means all subsequenet reads' caches are\n            // invalidated.\n            var top = this.textarea.offsetTop;\n            var left = this.textarea.offsetLeft;\n            var height = this.textarea.offsetHeight;\n            // We must use `clientWidth` as we need to exclude the potential vertical\n            // scrollbar. `clientWidth` includes paddings but not borders.\n            var width = this.textarea.clientWidth + parseInt(this.textareaStyle.borderLeftWidth || '0', 10) + parseInt(this.textareaStyle.borderRightWidth || '0', 10);\n            var textareaScrollTop = this.textarea.scrollTop;\n            var textareaZIndex = this.textareaStyle.zIndex !== null && this.textareaStyle.zIndex !== 'auto' ? +this.textareaStyle.zIndex : 0;\n            // Writes:\n            this.backdrop.style.zIndex = '' + (textareaZIndex - 2);\n            this.overlay.style.zIndex = '' + (textareaZIndex - 1);\n            this.backdrop.style.left = this.overlay.style.left = left + 'px';\n            this.backdrop.style.top = this.overlay.style.top = top + 'px';\n            this.backdrop.style.height = this.overlay.style.height = height + 'px';\n            this.backdrop.style.width = this.overlay.style.width = width + 'px';\n            this.setOverlayScroll(textareaScrollTop);\n        }\n    }, {\n        key: 'setOverlayScroll',\n        value: function setOverlayScroll(textareaScrollTop) {\n            if (this.overlayPositioner !== null) {\n                this.overlayPositioner.style.marginTop = '-' + textareaScrollTop + 'px';\n            }\n        }\n    }, {\n        key: 'computeOverlayNodes',\n        value: function computeOverlayNodes() {\n            return this.strategies.reduce(function (ns, strategy) {\n                var highlight = document.createElement('span');\n                setStyle(highlight, strategy.css);\n                return Array.prototype.concat.apply([], ns.map(function (node) {\n                    if (node.nodeType !== Node.TEXT_NODE) {\n                        return node;\n                    }\n                    var text = node.textContent || '';\n                    var resp = [];\n                    while (true) {\n                        var prevIndex = strategy.match.lastIndex;\n                        var match = strategy.match.exec(text);\n                        if (!match) {\n                            resp.push(document.createTextNode(text.slice(prevIndex)));\n                            break;\n                        }\n                        var str = match[0];\n                        resp.push(document.createTextNode(text.slice(prevIndex, strategy.match.lastIndex - str.length)));\n                        var span = highlight.cloneNode();\n                        span.textContent = str;\n                        resp.push(span);\n                    }\n                    return resp;\n                }));\n            }, [document.createTextNode(this.textarea.value)]);\n        }\n    }, {\n        key: 'handleInput',\n        value: function handleInput() {\n            this.render();\n        }\n    }, {\n        key: 'handleScroll',\n        value: function handleScroll() {\n            this.setOverlayScroll(this.textarea.scrollTop);\n        }\n    }, {\n        key: 'copyTextareaStyle',\n        value: function copyTextareaStyle(target, keys) {\n            var _this3 = this;\n\n            keys.forEach(function (key) {\n                target.style.setProperty(key, _this3.textareaStyle.getPropertyValue(key));\n            });\n        }\n    }]);\n\n    return Textoverlay;\n}();\n/**\n * Set style to the element.\n */\n\n\nexports.default = Textoverlay;\nfunction setStyle(element, style) {\n    Object.keys(style).forEach(function (key) {\n        element.style.setProperty(key, style[key]);\n    });\n}\n\n/***/ })\n/******/ ])[\"default\"];\n});\n\n\n// WEBPACK FOOTER //\n// textoverlay.es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 983220d0c9cef1956027","/**\n * textoverlay.js - Simple decorator for textarea elements\n *\n * @author Yuku Takahashi <taka84u9@gmail.com>\n */\n\nconst css = {\n  backdrop: {\n    'box-sizing': 'border-box',\n    'position': 'absolute',\n    'margin': '0px',\n  },\n  overlay: {\n    'box-sizing': 'border-box',\n    'border-color': 'transparent',\n    'border-style': 'solid',\n    'color': 'transparent',\n    'position': 'absolute',\n    'white-space': 'pre-wrap',\n    'word-wrap': 'break-word',\n    'overflow': 'hidden',\n    'margin': '0px',\n  },\n  textarea: {\n    background: 'transparent',\n  },\n};\n\n// Firefox does not provide shorthand properties in getComputedStyle, so we use\n// the expanded ones here.\nconst properties = {\n  background: [\n    'background-attachment',\n    'background-blend-mode',\n    'background-clip',\n    'background-color',\n    'background-image',\n    'background-origin',\n    'background-position',\n    'background-position-x',\n    'background-position-y',\n    'background-repeat',\n    'background-size',\n  ],\n  overlay: [\n    'font-family',\n    'font-size',\n    'font-weight',\n    'line-height',\n    'padding-top',\n    'padding-right',\n    'padding-bottom',\n    'padding-left',\n    'border-top-width',\n    'border-right-width',\n    'border-bottom-width',\n    'border-left-width',\n  ],\n};\n\nexport interface Strategy {\n  match: Matcher;\n  css: CssStyle;\n}\n\n// A matcher can be a RegExp or a RegExp-like object.\nexport interface Matcher {\n  lastIndex: number;\n  exec: (input: string) => null | [string] | RegExpExecArray;\n}\n\n// Can't use `keyof CSSStyleDeclaration` because it only has camelCase keys.\nexport interface CssStyle { [cssProperty: string]: string; }\n\nexport default class Textoverlay {\n  public strategies: Strategy[];\n  public readonly backdrop: HTMLDivElement;\n  public readonly overlay: HTMLDivElement;\n  public readonly textarea: HTMLTextAreaElement;\n  private overlayPositioner: HTMLDivElement|null = null;\n  private textareaStyle: CSSStyleDeclaration;\n  private textareaStyleWas: CssStyle;\n  private observer: MutationObserver;\n  private resizeListener: () => void;\n\n  constructor(textarea: HTMLTextAreaElement, strategies: Strategy[]) {\n    if (textarea.parentElement === null) {\n      throw new Error('textarea must be in the DOM tree');\n    }\n    this.textarea = textarea;\n    this.textareaStyle = window.getComputedStyle(textarea);\n\n    this.backdrop = document.createElement('div');\n    this.backdrop.className = 'textoverlay-backdrop';\n    setStyle(this.backdrop, css.backdrop);\n    this.copyTextareaStyle(this.backdrop, properties.background);\n    this.textarea.parentElement!.insertBefore(this.backdrop, this.textarea);\n\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'textoverlay';\n    setStyle(this.overlay, css.overlay);\n    this.copyTextareaStyle(this.overlay, properties.overlay);\n    this.textarea.parentElement!.insertBefore(this.overlay, this.textarea);\n\n    this.syncStyles();\n\n    this.textareaStyleWas = {};\n    Object.keys(css.textarea).forEach((key) => {\n      this.textareaStyleWas[key] = this.textarea.style.getPropertyValue(key);\n    });\n    setStyle(this.textarea, css.textarea);\n\n    this.strategies = strategies;\n    this.textarea.addEventListener('input', () => {\n      this.handleInput();\n    });\n    this.textarea.addEventListener('scroll', () => {\n      this.handleScroll();\n    });\n    this.observer = new MutationObserver(() => {\n      this.syncStyles();\n    });\n    this.observer.observe(this.textarea, {\n      attributes: true,\n      attributeFilter: ['style'],\n    });\n    // Listen to resize to detect changes in the element offset position.\n    this.resizeListener = () => {\n      this.syncStyles();\n    };\n    window.addEventListener('resize', this.resizeListener);\n    this.render();\n  }\n\n  public destroy() {\n    window.removeEventListener('resize', this.resizeListener);\n    this.textarea.removeEventListener('input', this.handleInput);\n    this.textarea.removeEventListener('scroll', this.handleScroll);\n    this.observer.disconnect();\n    this.overlay.remove();\n    this.backdrop.remove();\n    setStyle(this.textarea, this.textareaStyleWas);\n  }\n\n  /**\n   * Public API to update and sync textoverlay\n   */\n  public render(skipUpdate: boolean = false) {\n    if (!skipUpdate) {\n      this.updateOverlayNodes();\n    }\n    this.syncStyles();\n  }\n\n  private updateOverlayNodes() {\n    // Remove all child nodes from overlay.\n    while (this.overlay.firstChild) {\n      this.overlay.removeChild(this.overlay.firstChild);\n    }\n    this.overlayPositioner = document.createElement('div');\n    this.overlayPositioner.className = 'textoverlay-positioner';\n    this.overlayPositioner.style.display = 'block';\n    this.overlay.appendChild(this.overlayPositioner);\n    this.computeOverlayNodes().forEach((node) => {\n      this.overlay.appendChild(node);\n    });\n  }\n\n  private syncStyles() {\n    // All the reads must happen before all the writes to prevent layout\n    // thrashing, because every write means all subsequenet reads' caches are\n    // invalidated.\n    const top = this.textarea.offsetTop;\n    const left = this.textarea.offsetLeft;\n    const height = this.textarea.offsetHeight;\n    // We must use `clientWidth` as we need to exclude the potential vertical\n    // scrollbar. `clientWidth` includes paddings but not borders.\n    const width = this.textarea.clientWidth +\n        parseInt(this.textareaStyle.borderLeftWidth || '0', 10) +\n        parseInt(this.textareaStyle.borderRightWidth || '0', 10);\n    const textareaScrollTop = this.textarea.scrollTop;\n    const textareaZIndex = this.textareaStyle.zIndex !== null &&\n            this.textareaStyle.zIndex !== 'auto' ?\n        +this.textareaStyle.zIndex :\n        0;\n\n    // Writes:\n    this.backdrop.style.zIndex = `${textareaZIndex - 2}`;\n    this.overlay.style.zIndex = `${textareaZIndex - 1}`;\n    this.backdrop.style.left = this.overlay.style.left = `${left}px`;\n    this.backdrop.style.top = this.overlay.style.top = `${top}px`;\n    this.backdrop.style.height = this.overlay.style.height = `${height}px`;\n    this.backdrop.style.width = this.overlay.style.width = `${width}px`;\n    this.setOverlayScroll(textareaScrollTop);\n  }\n\n  private setOverlayScroll(textareaScrollTop: number) {\n    if (this.overlayPositioner !== null) {\n      this.overlayPositioner.style.marginTop = `-${textareaScrollTop}px`;\n    }\n  }\n\n  private computeOverlayNodes(): Node[] {\n    return this.strategies.reduce((ns: Node[], strategy) => {\n      const highlight = document.createElement('span');\n      setStyle(highlight, strategy.css);\n      return Array.prototype.concat.apply([], ns.map((node) => {\n        if (node.nodeType !== Node.TEXT_NODE) {\n          return node;\n        }\n        const text = node.textContent || '';\n        const resp = [];\n        while (true) {\n          const prevIndex = strategy.match.lastIndex;\n          const match = strategy.match.exec(text);\n          if (!match) {\n            resp.push(document.createTextNode(text.slice(prevIndex)));\n            break;\n          }\n          const str = match[0];\n          resp.push(document.createTextNode(\n              text.slice(prevIndex, strategy.match.lastIndex - str.length)));\n          const span = highlight.cloneNode();\n          span.textContent = str;\n          resp.push(span);\n        }\n        return resp;\n      }));\n    }, [document.createTextNode(this.textarea.value)]);\n  }\n\n  private handleInput() {\n    this.render();\n  }\n\n  private handleScroll() {\n    this.setOverlayScroll(this.textarea.scrollTop);\n  }\n\n  private copyTextareaStyle(target: HTMLElement, keys: string[]) {\n    keys.forEach((key) => {\n      target.style.setProperty(key, this.textareaStyle.getPropertyValue(key));\n    });\n  }\n}\n\n/**\n * Set style to the element.\n */\nfunction setStyle(element: HTMLElement, style: CssStyle) {\n  Object.keys(style).forEach((key) => {\n    element.style.setProperty(key, style[key]);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./textoverlay.ts"],"sourceRoot":""}