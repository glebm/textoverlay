{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///textoverlay.es5.min.js","webpack:///webpack/bootstrap 8c5ebbf4d7014a1e092a","webpack:///./textoverlay.ts"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","setStyle","element","style","keys","forEach","key","setProperty","value","_createClass","defineProperties","target","props","length","descriptor","writable","protoProps","staticProps","css","wrapper","box-sizing","overflow","overlay","border-color","border-style","color","position","white-space","word-wrap","width","textarea","background","outline","height","margin","properties","Textoverlay","strategies","_this","parentElement","Error","textareaStyle","window","getComputedStyle","createWrapper","createOverlay","textareaStyleWas","getPropertyValue","handleInput","bind","handleScroll","handleResize","addEventListener","observer","MutationObserver","observe","attributes","attributeFilter","wrapperDisplay","display","render","removeEventListener","disconnect","remove","insertBefore","arguments","undefined","update","sync","document","createElement","className","appendChild","copyTextareaStyle","_this2","firstChild","removeChild","computeOverlayNodes","node","top","scrollTop","boundingRect","getBoundingClientRect","reduce","ns","strategy","highlight","Array","concat","apply","map","nodeType","Node","TEXT_NODE","text","textContent","resp","prevIndex","match","lastIndex","exec","push","createTextNode","slice","str","span","cloneNode","_this3","default"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,YAAAD,IAEAD,EAAA,YAAAC,KACC,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDgBM,SAAU9B,EAAQD,GAExB,YASA,SAASgC,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCEiKhH,QAAAC,GAAsCC,EAAiBC,GAC/CnB,OAAKoB,KAAOD,GAAQE,QAAC,SAAQC,GAC1BJ,EAAMC,MAAYI,YAAID,EAAOH,EACtCG,MF1KFtB,OAAOC,eAAepB,EAAS,cAC3B2C,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrC,GAAI,EAAGA,EAAIqC,EAAMC,OAAQtC,IAAK,CAAE,GAAIuC,GAAaF,EAAMrC,EAAIuC,GAAW3B,WAAa2B,EAAW3B,aAAc,EAAO2B,EAAW5B,cAAe,EAAU,SAAW4B,KAAYA,EAAWC,UAAW,GAAM/B,OAAOC,eAAe0B,EAAQG,EAAWR,IAAKQ,IAAiB,MAAO,UAAUf,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBX,EAAYN,UAAWuB,GAAiBC,GAAaP,EAAiBX,EAAakB,GAAqBlB,MEhFvhBmB,GACAC,SACOC,aAAc,aAChBC,SACX,UACMC,SACOF,aAAc,aACZG,eAAe,cACfC,eAAS,QAChBC,MAAe,cACZC,SAAY,WACTC,cAAY,WACdC,YAAc,aACfP,SAAU,SACbQ,MACR,QACOC,UACMC,WAAe,cACfX,aAAc,aACjBY,QAAQ,OACPN,SAAY,WACdO,OAAQ,OACTJ,MAAQ,OACPK,OAEV,QAIcC,GACPhB,SACkB,wBACA,wBACN,kBACC,mBACA,mBACC,oBACE,sBACE,wBACA,wBACJ,oBACF,kBACR,UACG,aACE,eACC,gBAEhB,eACMG,SACQ,cACF,YACE,cACA,cACA,cACE,gBACC,iBACF,eACI,mBACE,qBACC,sBAmBX,sBF4CVc,EAAc,WEjChB,QAAAA,GAAyCN,EAAwBO,GFmC3D,GAAIC,GAAQpE,IElCb,IFoCC2B,EAAgB3B,KAAMkE,IEpCbN,EAAeS,cAC1B,KAAM,IAASC,OACjB,mCACItE,MAAS4D,SAAYA,EACrB5D,KAAcuE,cAASC,OAAiBC,iBAAWb,GACnD5D,KAAiB0E,gBACjB1E,KAAiB2E,gBAEjB3E,KAAiB4E,oBACf9D,OAAKoB,KAAIc,EAAUY,UAAQzB,QAAC,SAAQC,GACpCgC,EAAiBQ,iBAAKxC,GAAOgC,EAASR,SAAM3B,MAAiB4C,iBACnEzC,KACQL,EAAK/B,KAAS4D,SAAKZ,EAAWY,UAElC5D,KAAWmE,WAAcA,EAEzBnE,KAAY8E,YAAO9E,KAAY8E,YAAKC,KAAO/E,MAC3CA,KAAagF,aAAOhF,KAAagF,aAAKD,KAAO/E,MAC7CA,KAAaiF,aAAOjF,KAAaiF,aAAKF,KAAO/E,MAC7CA,KAAS4D,SAAiBsB,iBAAQ,QAAMlF,KAAc8E,aACtD9E,KAAS4D,SAAiBsB,iBAAS,SAAMlF,KAAegF,cACxDhF,KAASmF,SAAG,GAAoBC,kBAAKpF,KAAeiF,cACpDjF,KAASmF,SAAQE,QAAKrF,KAAS4D,UACvB0B,YAAM,EACDC,iBACd,WAECvF,KAAewF,eAAOxF,KAAQiD,QAAMhB,MAAQwD,SAAO,GACnDzF,KACN0F,SF6KE,MAzIAnD,GAAa2B,IACT9B,IAAK,UACLE,MAAO,WEnCPtC,KAAS4D,SAAoB+B,oBAAQ,QAAM3F,KAAc8E,aACzD9E,KAAS4D,SAAoB+B,oBAAS,SAAM3F,KAAegF,cAC3DhF,KAASmF,SAAcS,aACvB5F,KAAQoD,QAAUyC,SACd9D,EAAK/B,KAAS4D,SAAM5D,KAAmB4E,iBAC/C,IAAmBP,GAAOrE,KAAQiD,QAAeoB,aAC/BA,KACHA,EAAayB,aAAK9F,KAAS4D,SAAM5D,KAAUiD,SACpDjD,KAAQiD,QACd4C,aF2CIzD,IAAK,SACLE,MAAO,WEtCCyD,UAAApD,OAAA,OAAAqD,KAAAD,UAAA,IAAAA,UAAA,IAEN/F,KACNiG,SACIjG,KACNkG,UF0CM9D,IAAK,gBACLE,MAAO,WExCPtC,KAAQiD,QAAWkD,SAAcC,cAAQ,OACzCpG,KAAQiD,QAAUoD,UAAyB,sBACvCtE,EAAK/B,KAAQiD,QAAKD,EAAUC,SAChCjD,KAAQiD,QAAMhB,MAASuB,SAA6C,WAAtCxD,KAAcuE,cAASf,SACzC,WACRxD,KAAcuE,cAAUf,SACNxD,KAAS4D,SAAgBS,cACzByB,aAAK9F,KAAQiD,QAAMjD,KAAW4D,UACpD5D,KAAQiD,QAAYqD,YAAKtG,KAC/B4D,aFyCMxB,IAAK,gBACLE,MAAO,WEvCPtC,KAAQoD,QAAW+C,SAAcC,cAAQ,OACzCpG,KAAQoD,QAAUiD,UAAiB,cAC/BtE,EAAK/B,KAAQoD,QAAKJ,EAAUI,SAChCpD,KAAkBuG,kBAAKvG,KAAQoD,QAAYa,EAAUb,SACrDpD,KAAQiD,QAAa6C,aAAK9F,KAAQoD,QAAMpD,KAC9C4D,aF8CMxB,IAAK,SACLE,MAAO,WExCX,IFyCQ,GAAIkE,GAASxG,KEzCVA,KAAQoD,QAAWqD,YACxBzG,KAAQoD,QAAYsD,YAAK1G,KAAQoD,QACvCqD,WACIzG,MAAsB2G,sBAAQxE,QAAC,SAASyE,GACtCJ,EAAQpD,QAAYkD,YAC1BM,QFmDIxE,IAAK,OACLE,MAAO,WE7CPtC,KAAQoD,QAAMnB,MAAO4E,KAAS7G,KAAS4D,SAAekD,UAAA,IAI1D,IAAkBC,GAAO/G,KAAQiD,QAAyB+D,uBACtDhH,MAAQiD,QAAMhB,MAAU8B,OAAegD,EAAYhD,OAAA,KACnB,UAA5B/D,KAAewF,iBACjBxF,KAAQiD,QAAMhB,MAAS0B,MAAeoD,EAC5CpD,MAAA,SFiDIvB,IAAK,sBACLE,MAAO,WE9CL,MAAAtC,MAAgBmE,WAAO8C,OAAC,SAAWC,EAAcC,GACrD,GAAeC,GAAWjB,SAAcC,cAAS,OAE3C,OADErE,GAAUqF,EAAUD,EAAMnE,KAC5BqE,MAAgB9F,UAAO+F,OAAMC,SAAGL,EAAQM,IAAC,SAASZ,GACnD,GAAKA,EAASa,WAASC,KAAWC,UAC7B,MACRf,EAGA,KAFA,GAAUgB,GAAOhB,EAAYiB,aAAO,GAC1BC,OACI,CACZ,GAAeC,GAAWZ,EAAMa,MAAWC,UAChCD,EAAWb,EAAMa,MAAKE,KAAON,EACrC,KAAQI,EAAE,CACPF,EAAKK,KAAShC,SAAeiC,eAAKR,EAAMS,MAAcN,IAE5D,OACA,GAASO,GAAQN,EAAI,EACjBF,GAAKK,KAAShC,SAAeiC,eACzBR,EAAMS,MAAUN,EAAUZ,EAAMa,MAAUC,UAAMK,EAAW3F,SACnE,IAAU4F,GAAYnB,EAAaoB,WAC/BD,GAAYV,YAAOS,EACnBR,EAAKK,KACXI,GACM,MACRT,QACU3B,SAAeiC,eAAKpI,KAAS4D,SAC3CtB,YFgDMF,IAAK,cACLE,MAAO,WE9CPtC,KACN0F,YFiDMtD,IAAK,eACLE,MAAO,WE/CPtC,KAAO0F,QACb,MFkDMtD,IAAK,eACLE,MAAO,WEhDPtC,KAAO0F,QACb,MFmDMtD,IAAK,oBACLE,MAAO,SElDgCG,EAAgBP,GFmDnD,GAAIuG,GAASzI,IElDjBkC,GAAQC,QAAC,SAAQC,GACbK,EAAMR,MAAYI,YAAID,EAAMqG,EAAclE,cAAiBM,iBACnEzC,UFwDO8B,IAOXvE,GAAQ+I,QAAUxE,KAQG","file":"textoverlay.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Textoverlay\"] = factory();\n\telse\n\t\troot[\"Textoverlay\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Textoverlay\"] = factory();\n\telse\n\t\troot[\"Textoverlay\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * textoverlay.js - Simple decorator for textarea elements\n *\n * @author Yuku Takahashi <taka84u9@gmail.com>\n */\nvar css = {\n    wrapper: {\n        'box-sizing': 'border-box',\n        'overflow': 'hidden'\n    },\n    overlay: {\n        'box-sizing': 'border-box',\n        'border-color': 'transparent',\n        'border-style': 'solid',\n        'color': 'transparent',\n        'position': 'absolute',\n        'white-space': 'pre-wrap',\n        'word-wrap': 'break-word',\n        'overflow': 'hidden',\n        'width': '100%'\n    },\n    textarea: {\n        'background': 'transparent',\n        'box-sizing': 'border-box',\n        'outline': 'none',\n        'position': 'relative',\n        'height': '100%',\n        'width': '100%',\n        'margin': '0px'\n    }\n};\n// Firefox does not provide shorthand properties in getComputedStyle, so we use\n// the expanded ones here.\nvar properties = {\n    wrapper: ['background-attachment', 'background-blend-mode', 'background-clip', 'background-color', 'background-image', 'background-origin', 'background-position', 'background-position-x', 'background-position-y', 'background-repeat', 'background-size', 'display', 'margin-top', 'margin-right', 'margin-bottom', 'margin-left'],\n    overlay: ['font-family', 'font-size', 'font-weight', 'line-height', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', 'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width']\n};\n\nvar Textoverlay = function () {\n    function Textoverlay(textarea, strategies) {\n        var _this = this;\n\n        _classCallCheck(this, Textoverlay);\n\n        if (!textarea.parentElement) {\n            throw new Error('textarea must be in the DOM tree');\n        }\n        this.textarea = textarea;\n        this.textareaStyle = window.getComputedStyle(textarea);\n        this.createWrapper();\n        this.createOverlay();\n        this.textareaStyleWas = {};\n        Object.keys(css.textarea).forEach(function (key) {\n            _this.textareaStyleWas[key] = _this.textarea.style.getPropertyValue(key);\n        });\n        setStyle(this.textarea, css.textarea);\n        this.strategies = strategies;\n        this.handleInput = this.handleInput.bind(this);\n        this.handleScroll = this.handleScroll.bind(this);\n        this.handleResize = this.handleResize.bind(this);\n        this.textarea.addEventListener('input', this.handleInput);\n        this.textarea.addEventListener('scroll', this.handleScroll);\n        this.observer = new MutationObserver(this.handleResize);\n        this.observer.observe(this.textarea, {\n            attributes: true,\n            attributeFilter: ['style']\n        });\n        this.wrapperDisplay = this.wrapper.style.display || '';\n        this.render();\n    }\n\n    _createClass(Textoverlay, [{\n        key: 'destroy',\n        value: function destroy() {\n            this.textarea.removeEventListener('input', this.handleInput);\n            this.textarea.removeEventListener('scroll', this.handleScroll);\n            this.observer.disconnect();\n            this.overlay.remove();\n            setStyle(this.textarea, this.textareaStyleWas);\n            var parentElement = this.wrapper.parentElement;\n            if (parentElement) {\n                parentElement.insertBefore(this.textarea, this.wrapper);\n                this.wrapper.remove();\n            }\n        }\n        /**\n         * Public API to update and sync textoverlay\n         */\n\n    }, {\n        key: 'render',\n        value: function render() {\n            var skipUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!skipUpdate) {\n                this.update();\n            }\n            this.sync();\n        }\n    }, {\n        key: 'createWrapper',\n        value: function createWrapper() {\n            this.wrapper = document.createElement('div');\n            this.wrapper.className = 'textoverlay-wrapper';\n            setStyle(this.wrapper, css.wrapper);\n            this.wrapper.style.position = this.textareaStyle.position === 'static' ? 'relative' : this.textareaStyle.position;\n            var parentElement = this.textarea.parentElement;\n            parentElement.insertBefore(this.wrapper, this.textarea);\n            this.wrapper.appendChild(this.textarea);\n        }\n    }, {\n        key: 'createOverlay',\n        value: function createOverlay() {\n            this.overlay = document.createElement('div');\n            this.overlay.className = 'textoverlay';\n            setStyle(this.overlay, css.overlay);\n            this.copyTextareaStyle(this.overlay, properties.overlay);\n            this.wrapper.insertBefore(this.overlay, this.textarea);\n        }\n        /**\n         * Update contents of textoverlay\n         */\n\n    }, {\n        key: 'update',\n        value: function update() {\n            var _this2 = this;\n\n            // Remove all child nodes from overlay.\n            while (this.overlay.firstChild) {\n                this.overlay.removeChild(this.overlay.firstChild);\n            }\n            this.computeOverlayNodes().forEach(function (node) {\n                _this2.overlay.appendChild(node);\n            });\n        }\n        /**\n         * Sync scroll and size of textarea\n         */\n\n    }, {\n        key: 'sync',\n        value: function sync() {\n            this.overlay.style.top = -this.textarea.scrollTop + 'px';\n            // In IE11, dimensions returned by `getComputedStyle` do not take\n            // `box-sizing` into account. We use `getBoundingClientRect` instead as a\n            // workaround.\n            var boundingRect = this.wrapper.getBoundingClientRect();\n            this.wrapper.style.height = boundingRect.height + 'px';\n            if (this.wrapperDisplay !== 'block') {\n                this.wrapper.style.width = boundingRect.width + 'px';\n            }\n        }\n    }, {\n        key: 'computeOverlayNodes',\n        value: function computeOverlayNodes() {\n            return this.strategies.reduce(function (ns, strategy) {\n                var highlight = document.createElement('span');\n                setStyle(highlight, strategy.css);\n                return Array.prototype.concat.apply([], ns.map(function (node) {\n                    if (node.nodeType !== Node.TEXT_NODE) {\n                        return node;\n                    }\n                    var text = node.textContent || '';\n                    var resp = [];\n                    while (true) {\n                        var prevIndex = strategy.match.lastIndex;\n                        var match = strategy.match.exec(text);\n                        if (!match) {\n                            resp.push(document.createTextNode(text.slice(prevIndex)));\n                            break;\n                        }\n                        var str = match[0];\n                        resp.push(document.createTextNode(text.slice(prevIndex, strategy.match.lastIndex - str.length)));\n                        var span = highlight.cloneNode();\n                        span.textContent = str;\n                        resp.push(span);\n                    }\n                    return resp;\n                }));\n            }, [document.createTextNode(this.textarea.value)]);\n        }\n    }, {\n        key: 'handleInput',\n        value: function handleInput() {\n            this.render();\n        }\n    }, {\n        key: 'handleScroll',\n        value: function handleScroll() {\n            this.render(true);\n        }\n    }, {\n        key: 'handleResize',\n        value: function handleResize() {\n            this.render(true);\n        }\n    }, {\n        key: 'copyTextareaStyle',\n        value: function copyTextareaStyle(target, keys) {\n            var _this3 = this;\n\n            keys.forEach(function (key) {\n                target.style.setProperty(key, _this3.textareaStyle.getPropertyValue(key));\n            });\n        }\n    }]);\n\n    return Textoverlay;\n}();\n/**\n * Set style to the element.\n */\n\n\nexports.default = Textoverlay;\nfunction setStyle(element, style) {\n    Object.keys(style).forEach(function (key) {\n        element.style.setProperty(key, style[key]);\n    });\n}\n\n/***/ })\n/******/ ])[\"default\"];\n});\n\n\n// WEBPACK FOOTER //\n// textoverlay.es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8c5ebbf4d7014a1e092a","/**\n * textoverlay.js - Simple decorator for textarea elements\n *\n * @author Yuku Takahashi <taka84u9@gmail.com>\n */\n\nconst css = {\n  wrapper: {\n    'box-sizing': 'border-box',\n    'overflow': 'hidden',\n  },\n  overlay: {\n    'box-sizing': 'border-box',\n    'border-color': 'transparent',\n    'border-style': 'solid',\n    'color': 'transparent',\n    'position': 'absolute',\n    'white-space': 'pre-wrap',\n    'word-wrap': 'break-word',\n    'overflow': 'hidden',\n    'width': '100%',\n  },\n  textarea: {\n    'background': 'transparent',\n    'box-sizing': 'border-box',\n    'outline': 'none',\n    'position': 'relative',\n    'height': '100%',\n    'width': '100%',\n    'margin': '0px',\n  },\n};\n\n// Firefox does not provide shorthand properties in getComputedStyle, so we use\n// the expanded ones here.\nconst properties = {\n  wrapper: [\n    'background-attachment',\n    'background-blend-mode',\n    'background-clip',\n    'background-color',\n    'background-image',\n    'background-origin',\n    'background-position',\n    'background-position-x',\n    'background-position-y',\n    'background-repeat',\n    'background-size',\n    'display',\n    'margin-top',\n    'margin-right',\n    'margin-bottom',\n    'margin-left',\n  ],\n  overlay: [\n    'font-family',\n    'font-size',\n    'font-weight',\n    'line-height',\n    'padding-top',\n    'padding-right',\n    'padding-bottom',\n    'padding-left',\n    'border-top-width',\n    'border-right-width',\n    'border-bottom-width',\n    'border-left-width',\n  ],\n};\n\nexport interface Strategy {\n  match: Matcher;\n  css: CssStyle;\n}\n\n// A matcher can be a RegExp or a RegExp-like object.\nexport interface Matcher {\n  lastIndex: number;\n  exec: (input: string) => null | [string] | RegExpExecArray;\n}\n\n// Can't use `keyof CSSStyleDeclaration` because it only has camelCase keys.\nexport interface CssStyle { [cssProperty: string]: string; }\n\nexport default class Textoverlay {\n  public strategies: Strategy[];\n  public observer: MutationObserver;\n  public wrapperDisplay: string;\n\n  public overlay: HTMLDivElement;\n  public textarea: HTMLTextAreaElement;\n  public textareaStyle: CSSStyleDeclaration;\n  public textareaStyleWas: CssStyle;\n  public wrapper: HTMLDivElement;\n\n  constructor(textarea: HTMLTextAreaElement, strategies: Strategy[]) {\n    if (!textarea.parentElement) {\n      throw new Error('textarea must be in the DOM tree');\n    }\n    this.textarea = textarea;\n    this.textareaStyle = window.getComputedStyle(textarea);\n    this.createWrapper();\n    this.createOverlay();\n\n    this.textareaStyleWas = {};\n    Object.keys(css.textarea).forEach((key) => {\n      this.textareaStyleWas[key] = this.textarea.style.getPropertyValue(key);\n    });\n    setStyle(this.textarea, css.textarea);\n\n    this.strategies = strategies;\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.textarea.addEventListener('input', this.handleInput);\n    this.textarea.addEventListener('scroll', this.handleScroll);\n    this.observer = new MutationObserver(this.handleResize);\n    this.observer.observe(this.textarea, {\n      attributes: true,\n      attributeFilter: ['style'],\n    });\n\n    this.wrapperDisplay = this.wrapper.style.display || '';\n    this.render();\n  }\n\n  public destroy() {\n    this.textarea.removeEventListener('input', this.handleInput);\n    this.textarea.removeEventListener('scroll', this.handleScroll);\n    this.observer.disconnect();\n    this.overlay.remove();\n    setStyle(this.textarea, this.textareaStyleWas);\n    const parentElement = this.wrapper.parentElement;\n    if (parentElement) {\n      parentElement.insertBefore(this.textarea, this.wrapper);\n      this.wrapper.remove();\n    }\n  }\n\n  /**\n   * Public API to update and sync textoverlay\n   */\n  public render(skipUpdate: boolean = false) {\n    if (!skipUpdate) {\n      this.update();\n    }\n    this.sync();\n  }\n\n  protected createWrapper() {\n    this.wrapper = document.createElement('div');\n    this.wrapper.className = 'textoverlay-wrapper';\n    setStyle(this.wrapper, css.wrapper);\n    this.wrapper.style.position = this.textareaStyle.position === 'static' ?\n        'relative' :\n        this.textareaStyle.position;\n    const parentElement = this.textarea.parentElement!;\n    parentElement.insertBefore(this.wrapper, this.textarea);\n    this.wrapper.appendChild(this.textarea);\n  }\n\n  protected createOverlay() {\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'textoverlay';\n    setStyle(this.overlay, css.overlay);\n    this.copyTextareaStyle(this.overlay, properties.overlay);\n    this.wrapper.insertBefore(this.overlay, this.textarea);\n  }\n\n  /**\n   * Update contents of textoverlay\n   */\n  private update() {\n    // Remove all child nodes from overlay.\n    while (this.overlay.firstChild) {\n      this.overlay.removeChild(this.overlay.firstChild);\n    }\n    this.computeOverlayNodes().forEach((node) => {\n      this.overlay.appendChild(node);\n    });\n  }\n\n  /**\n   * Sync scroll and size of textarea\n   */\n  private sync() {\n    this.overlay.style.top = `${- this.textarea.scrollTop}px`;\n    // In IE11, dimensions returned by `getComputedStyle` do not take\n    // `box-sizing` into account. We use `getBoundingClientRect` instead as a\n    // workaround.\n    const boundingRect = this.wrapper.getBoundingClientRect();\n    this.wrapper.style.height = `${boundingRect.height}px`;\n    if (this.wrapperDisplay !== 'block') {\n      this.wrapper.style.width = `${boundingRect.width}px`;\n    }\n  }\n\n  private computeOverlayNodes(): Node[] {\n    return this.strategies.reduce((ns: Node[], strategy) => {\n      const highlight = document.createElement('span');\n      setStyle(highlight, strategy.css);\n      return Array.prototype.concat.apply([], ns.map((node) => {\n        if (node.nodeType !== Node.TEXT_NODE) {\n          return node;\n        }\n        const text = node.textContent || '';\n        const resp = [];\n        while (true) {\n          const prevIndex = strategy.match.lastIndex;\n          const match = strategy.match.exec(text);\n          if (!match) {\n            resp.push(document.createTextNode(text.slice(prevIndex)));\n            break;\n          }\n          const str = match[0];\n          resp.push(document.createTextNode(\n              text.slice(prevIndex, strategy.match.lastIndex - str.length)));\n          const span = highlight.cloneNode();\n          span.textContent = str;\n          resp.push(span);\n        }\n        return resp;\n      }));\n    }, [document.createTextNode(this.textarea.value)]);\n  }\n\n  private handleInput() {\n    this.render();\n  }\n\n  private handleScroll() {\n    this.render(true);\n  }\n\n  private handleResize() {\n    this.render(true);\n  }\n\n  private copyTextareaStyle(target: HTMLElement, keys: string[]) {\n    keys.forEach((key) => {\n      target.style.setProperty(key, this.textareaStyle.getPropertyValue(key));\n    });\n  }\n}\n\n/**\n * Set style to the element.\n */\nfunction setStyle(element: HTMLElement, style: CssStyle) {\n  Object.keys(style).forEach((key) => {\n    element.style.setProperty(key, style[key]);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./textoverlay.ts"],"sourceRoot":""}