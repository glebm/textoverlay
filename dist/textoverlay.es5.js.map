{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap df86f09eadf4b1dfe9db","webpack:///./textoverlay.ts"],"names":[],"mappings":"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","file":"textoverlay.es5.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Textoverlay\"] = factory();\n\telse\n\t\troot[\"Textoverlay\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap df86f09eadf4b1dfe9db","/**\n * textoverlay.js - Simple decorator for textarea elements\n *\n * @author Yuku Takahashi <taka84u9@gmail.com>\n */\n\nconst css = {\n  wrapper: {\n    'box-sizing': 'border-box',\n    'overflow': 'hidden',\n  },\n  overlay: {\n    'box-sizing': 'border-box',\n    'border-color': 'transparent',\n    'border-style': 'solid',\n    'color': 'transparent',\n    'position': 'absolute',\n    'white-space': 'pre-wrap',\n    'word-wrap': 'break-word',\n    'overflow': 'hidden',\n    'width': '100%',\n  },\n  textarea: {\n    'background': 'transparent',\n    'box-sizing': 'border-box',\n    'outline': 'none',\n    'position': 'relative',\n    'height': '100%',\n    'width': '100%',\n    'margin': '0px',\n  },\n};\n\n// Firefox does not provide shorthand properties in getComputedStyle, so we use\n// the expanded ones here.\nconst properties = {\n  wrapper: [\n    'background-attachment',\n    'background-blend-mode',\n    'background-clip',\n    'background-color',\n    'background-image',\n    'background-origin',\n    'background-position',\n    'background-position-x',\n    'background-position-y',\n    'background-repeat',\n    'background-size',\n    'display',\n    'margin-top',\n    'margin-right',\n    'margin-bottom',\n    'margin-left',\n  ],\n  overlay: [\n    'font-family',\n    'font-size',\n    'font-weight',\n    'line-height',\n    'padding-top',\n    'padding-right',\n    'padding-bottom',\n    'padding-left',\n    'border-top-width',\n    'border-right-width',\n    'border-bottom-width',\n    'border-left-width',\n  ],\n};\n\nexport interface Strategy {\n  match: Matcher;\n  css: CssStyle;\n}\n\n// A matcher can be a RegExp or a RegExp-like object.\nexport interface Matcher {\n  lastIndex: number;\n  exec: (input: string) => null | [string] | RegExpExecArray;\n}\n\n// Can't use `keyof CSSStyleDeclaration` because it only has camelCase keys.\nexport interface CssStyle { [cssProperty: string]: string; }\n\nexport default class Textoverlay {\n  public strategies: Strategy[];\n  public observer: MutationObserver;\n  public wrapperDisplay: string;\n\n  public overlay: HTMLDivElement;\n  public textarea: HTMLTextAreaElement;\n  public textareaStyle: CSSStyleDeclaration;\n  public textareaStyleWas: CssStyle;\n  public wrapper: HTMLDivElement;\n\n  constructor(textarea: HTMLTextAreaElement, strategies: Strategy[]) {\n    if (!textarea.parentElement) {\n      throw new Error('textarea must be in the DOM tree');\n    }\n    this.textarea = textarea;\n    this.textareaStyle = window.getComputedStyle(textarea);\n    this.createWrapper();\n    this.createOverlay();\n\n    this.textareaStyleWas = {};\n    Object.keys(css.textarea).forEach((key) => {\n      this.textareaStyleWas[key] = this.textarea.style.getPropertyValue(key);\n    });\n    setStyle(this.textarea, css.textarea);\n\n    this.strategies = strategies;\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.textarea.addEventListener('input', this.handleInput);\n    this.textarea.addEventListener('scroll', this.handleScroll);\n    this.observer = new MutationObserver(this.handleResize);\n    this.observer.observe(this.textarea, {\n      attributes: true,\n      attributeFilter: ['style'],\n    });\n\n    this.wrapperDisplay = this.wrapper.style.display || '';\n    this.render();\n  }\n\n  public destroy() {\n    this.textarea.removeEventListener('input', this.handleInput);\n    this.textarea.removeEventListener('scroll', this.handleScroll);\n    this.observer.disconnect();\n    this.overlay.remove();\n    setStyle(this.textarea, this.textareaStyleWas);\n    const parentElement = this.wrapper.parentElement;\n    if (parentElement) {\n      parentElement.insertBefore(this.textarea, this.wrapper);\n      this.wrapper.remove();\n    }\n  }\n\n  /**\n   * Public API to update and sync textoverlay\n   */\n  public render(skipUpdate: boolean = false) {\n    if (!skipUpdate) {\n      this.update();\n    }\n    this.sync();\n  }\n\n  protected createWrapper() {\n    this.wrapper = document.createElement('div');\n    this.wrapper.className = 'textoverlay-wrapper';\n    setStyle(this.wrapper, css.wrapper);\n    this.wrapper.style.position = this.textareaStyle.position === 'static' ?\n        'relative' :\n        this.textareaStyle.position;\n    const parentElement = this.textarea.parentElement!;\n    parentElement.insertBefore(this.wrapper, this.textarea);\n    this.wrapper.appendChild(this.textarea);\n  }\n\n  protected createOverlay() {\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'textoverlay';\n    setStyle(this.overlay, css.overlay);\n    this.copyTextareaStyle(this.overlay, properties.overlay);\n    this.wrapper.insertBefore(this.overlay, this.textarea);\n  }\n\n  /**\n   * Update contents of textoverlay\n   */\n  private update() {\n    // Remove all child nodes from overlay.\n    while (this.overlay.firstChild) {\n      this.overlay.removeChild(this.overlay.firstChild);\n    }\n    this.computeOverlayNodes().forEach((node) => {\n      this.overlay.appendChild(node);\n    });\n  }\n\n  /**\n   * Sync scroll and size of textarea\n   */\n  private sync() {\n    this.overlay.style.top = `${- this.textarea.scrollTop}px`;\n    // In IE11, dimensions returned by `getComputedStyle` do not take\n    // `box-sizing` into account. We use `getBoundingClientRect` instead as a\n    // workaround.\n    const boundingRect = this.wrapper.getBoundingClientRect();\n    this.wrapper.style.height = `${boundingRect.height}px`;\n    if (this.wrapperDisplay !== 'block') {\n      this.wrapper.style.width = `${boundingRect.width}px`;\n    }\n  }\n\n  private computeOverlayNodes(): Node[] {\n    return this.strategies.reduce((ns: Node[], strategy) => {\n      const highlight = document.createElement('span');\n      setStyle(highlight, strategy.css);\n      return Array.prototype.concat.apply([], ns.map((node) => {\n        if (node.nodeType !== Node.TEXT_NODE) {\n          return node;\n        }\n        const text = node.textContent || '';\n        const resp = [];\n        while (true) {\n          const prevIndex = strategy.match.lastIndex;\n          const match = strategy.match.exec(text);\n          if (!match) {\n            resp.push(document.createTextNode(text.slice(prevIndex)));\n            break;\n          }\n          const str = match[0];\n          resp.push(document.createTextNode(\n              text.slice(prevIndex, strategy.match.lastIndex - str.length)));\n          const span = highlight.cloneNode();\n          span.textContent = str;\n          resp.push(span);\n        }\n        return resp;\n      }));\n    }, [document.createTextNode(this.textarea.value)]);\n  }\n\n  private handleInput() {\n    this.render();\n  }\n\n  private handleScroll() {\n    this.render(true);\n  }\n\n  private handleResize() {\n    this.render(true);\n  }\n\n  private copyTextareaStyle(target: HTMLElement, keys: string[]) {\n    keys.forEach((key) => {\n      target.style.setProperty(key, this.textareaStyle.getPropertyValue(key));\n    });\n  }\n}\n\n/**\n * Set style to the element.\n */\nfunction setStyle(element: HTMLElement, style: CssStyle) {\n  Object.keys(style).forEach((key) => {\n    element.style.setProperty(key, style[key]);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./textoverlay.ts"],"sourceRoot":""}